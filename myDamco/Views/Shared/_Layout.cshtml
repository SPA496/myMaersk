@using myDamco.Config
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
    @* insert "X-UA-Compatible" meta tag *@
    @if (IsSectionDefined("IECompatibleMeta")) {
        @RenderSection("IECompatibleMeta", required: false)
    } else {
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    }

    <meta charset="utf-8" />

    <title>@ViewBag.Title</title>
    <!-- KV: Modified from http://a.shinynew.me/post/6042784654/relative-paths-in-asp-net-mvc-javascript -->
    <script type="text/javascript">
        // create a function for getting the root path
        var ApplicationUrl = function (url) {
            // TODO: Add Web.Config configuration here so that we can force HTTPS
            var path = '@Request.ApplicationPath';
            if (path != '/') path = path + '/';
            return path + url;
        }
        
    </script>
    @* TODO: Make toggleable for development convenience *@
    <script type="text/javascript">
        // Generic error for exceptions
        window.onerror = function (msg, url, line, column, error) { @* "column" and "error" are only passed along in some browsers *@
            
            @* Seen in the Android browser that msg = [Event-object] != string (on script-loading errors it seems). (Also see: http://stackoverflow.com/questions/12563814/can-a-non-string-variable-come-inside-the-handler-of-window-onerror-event ) *@
            if (typeof (msg) !== "string") msg = "[non-string msg] " + msg + ", " + (typeof (msg) === "object" && msg != null ? (msg.srcElement ? msg.srcElement.outerHTML : "") + ", " + (msg.target ? msg.target.outerHTML : "") : "");
            if (typeof (url) !== "string") url = "[non-string url] " + url;

            @* try to identity specific unaviodable errors before logging them to elmah - namely we want to avoid spamming elmah with the js syntax-error from the pie-chart, when the user is not yet 
               logged into reporting and we get the ADFS-login HTML-page loaded into the <script> tags (before the first redirect of the iframehack). The error message produced by this varies from 
               browser to browser (and http vs https). Since this detection is not robust at all and it could match other errors, i just identity them, for the time being, but still log them. 
               This way the elmah log can atleast be filtered. (See: http://stackoverflow.com/questions/5913978/cryptic-script-error-reported-in-javascript-in-chrome-and-firefox for more info) *@
            var probablePiechartError = (msg.indexOf("Script error.") != -1 && line == 0) @* FF/Chrome/Opera *@
                                     || (msg.indexOf("Syntax error") != -1 && url.indexOf("reporting.damco.com/Reporting/jsonp") != -1 && url.indexOf("DefinitionList") != -1 && line <= 2) @* IE10 *@
                                     || (msg.indexOf("Syntax error") != -1 && url == window.mydamcoBasepath && (line >= 1 && line <= 3)); @* IE6-IE9 *@
            if (probablePiechartError) msg = "[PROBABLE PIECHART LOGIN] " + msg;

            @* Write error to console *@
            window.console && console.log && console.log(["Message: ", msg, "\nUrl: ", url, "\nLine: ", line].join(""));

            @* log errors to elmah - note that we will miss all exceptions occurring before JQuery is loaded *@
            if (window.$ && "@(Settings.Logging.ClientLoggingEnabled)" === "True") {
                $.ajax({
                    type: "POST",
                    url: "@(Url.Content("~"))Dashboard/LogClientException",
                    data: { msg: msg, url: url, line: line, column: column, stacktrace: error ? error.stack : "" }
                });
            }
            return true;
        };
    </script>
    <link rel="icon" type="image/x-icon" href="@Url.Content("~/favicon.ico?ver=2.0")"/>
    <link href="//fonts.googleapis.com/css?family=Lato&subset=latin,latin-ext" rel="stylesheet" type="text/css" />


    @{
        // Site
        Html.Resource("~/Content/normalize.css");
        Html.Resource("~/Content/site.css");
        Html.Resource("~/Content/themes/base/jquery-ui.css");
        Html.Resource("~/Content/jquery-datetimepicker.css");
        Html.Resource("~/Scripts/jquery-1.7.2.js");
        Html.Resource("~/Scripts/modernizr-2.7.2.js");
        Html.Resource("~/Scripts/jquery-ui-1.8.20.js");
        Html.Resource("~/Scripts/jquery-ui-timepicker-addon.js");
        Html.Resource("~/Scripts/jquery.ui.touch-punch.js");            // <- makes JQuery UI drag'n'drop work on touch devices: http://touchpunch.furf.com/
        Html.Resource("~/Scripts/site.js");
        Html.Resource("~/Scripts/date.js");
        Html.Resource("~/Scripts/moment.js");
        Html.Resource("~/Scripts/json2.js");
        Html.Resource("~/Scripts/piwikUtil.js");

        // Dashboard
        Html.ResourceGroup("dashboard", "~/Content/widgets/*.css");
        Html.ResourceGroup("dashboard", "~/Content/dashboard.css");
        Html.ResourceGroup("dashboard", "~/Scripts/raphael/raphael.js");
        Html.ResourceGroup("dashboard", "~/Scripts/raphael/g.raphael.js");
        Html.ResourceGroup("dashboard", "~/Scripts/raphael/*.js");
        Html.ResourceGroup("dashboard", "~/Scripts/widgets/*.js");
        Html.ResourceGroup("dashboard", "~/Scripts/dashboard.js");
        Html.ResourceGroup("dashboard", "~/Scripts/jquery.jsonp.js");
        Html.ResourceGroup("dashboard", "~/Scripts/jquery.flash.js");
        Html.ResourceGroup("dashboard", "~/Scripts/jquery.cookie.js");
        Html.ResourceGroup("dashboard", "~/Scripts/jfeed/jfeed.js");
        Html.ResourceGroup("dashboard", "~/Scripts/jfeed/*.js");
        Html.ResourceGroup("dashboard", "~/Content/widgets/images/*.gif");


        // Menu
        Html.Resource("~/Scripts/menu.js");
        Html.Resource("~/Content/menu.css");

        Html.Resource("~/Content/maersk-theme.css");
    }
    @Html.RenderResources()

    @* Piwik Javascript snippet *@
    @Html.Partial("_Piwik")

    @* Google Analytics Javascript snippet *@
    @Html.Partial("_GoogleAnalytics")

    @* WalkMe Javascript snippet *@
    @Html.Partial("_WalkMe")

</head>
<body>
    @Html.Partial("_DevelopmentBar")
    @Html.Action("Navigation", "Navigation", new { area = "" })
    <div class="page">
        <div id="main">


            @RenderBody()
        </div>
    </div>

    @{
        if(ViewBag.HideFooter == null || !ViewBag.HideFooter) {

            <div class="myDamco_staticLinks">
                @Html.ActionLink("Cookies", "Database", "StaticContent", new { id = "Cookies", area = "" }, new { @class = "action" })
                @Html.ActionLink("Disclaimer", "Database", "StaticContent", new { id = "Disclaimer", area = "" }, new { @class = "action" })
                @Html.ActionLink("Privacy policy", "Database", "StaticContent", new { id = "Privacypolicy", area = "" }, new { @class = "action" })
                @Html.ActionLink("Terms of Use", "Database", "StaticContent", new { id = "TermsOfUse", area = "" }, new { @class = "action" })
                <a class="action" href="http://www.maersk.com">A.P. Moller - Maersk</a><br /><br />
            </div>
        }

        Response.ContentType = "text/html";
    }

</body>
</html>
